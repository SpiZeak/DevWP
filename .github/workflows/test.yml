name: Tests

on:
  push:
    branches: [master, develop]
    paths:
      - 'src/**'
      - 'package.json'
      - 'vitest.config*.ts'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [master, develop]
    paths:
      - 'src/**'
      - 'package.json'
      - 'vitest.config*.ts'

permissions:
  contents: read
  pull-requests: write

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install
        timeout-minutes: 5

      - name: Run tests
        run: bun run test:run
        timeout-minutes: 10

      - name: Generate coverage report
        run: bun run test:coverage
        timeout-minutes: 10

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read coverage summary
            let coverageData;
            try {
              coverageData = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            } catch (error) {
              console.log('No coverage summary found');
              return;
            }

            const total = coverageData.total;
            const coverage = `
            ## Test Coverage Report

            | Metric | Coverage |
            |--------|----------|
            | Lines | ${total.lines.pct}% |
            | Statements | ${total.statements.pct}% |
            | Functions | ${total.functions.pct}% |
            | Branches | ${total.branches.pct}% |

            <details>
            <summary>View detailed coverage</summary>

            ### Covered Files
            ${Object.entries(coverageData)
              .filter(([key]) => key !== 'total')
              .map(([file, data]) => `- ${file}: ${data.lines.pct}%`)
              .join('\n')}
            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverage
            });
        continue-on-error: true

      - name: Archive coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  integration-tests:
    name: Integration Tests (Docker)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Start Docker services
        run: docker compose up -d nginx
        timeout-minutes: 30

      - name: Wait for services to be healthy
        run: |
          timeout 300 bash -c 'until docker compose ps | grep -q "healthy"; do sleep 5; done'
        timeout-minutes: 5

      - name: Run integration tests
        run: |
          # Add integration tests here when available
          echo "Integration tests would run here"
        continue-on-error: true

      - name: Docker logs on failure
        if: failure()
        run: docker compose logs

      - name: Stop Docker services
        if: always()
        run: docker compose down -v
