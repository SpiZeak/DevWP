name: Pull Request Checks

on:
  pull_request:
    branches:
      - master
      - develop
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install
        timeout-minutes: 5

      - name: Run type checking
        run: bun run typecheck
        timeout-minutes: 3

      - name: Run unit tests
        run: bun run test:run
        timeout-minutes: 10

      - name: Generate coverage report
        run: bun run test:coverage
        timeout-minutes: 10

      - name: Run linting
        run: bun run lint -- src/
        continue-on-error: true
        timeout-minutes: 10

      - name: Check code formatting
        run: |
          bun run format
          if [ -n "$(git status --porcelain)" ]; then
            echo "Code formatting issues detected. Run 'bun run format' locally."
            git diff
            exit 1
          fi

      - name: Build application
        run: bun run build
        timeout-minutes: 10

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" src/main src/renderer --exclude-dir=node_modules; then
            echo "Warning: Found console.log statements. Consider using the logger service."
          fi
        continue-on-error: true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install
        timeout-minutes: 5

      - name: Start Docker services
        run: docker compose up -d mariadb
        timeout-minutes: 5

      - name: Wait for MariaDB
        run: |
          timeout 30 bash -c 'until docker exec devwp_mariadb mariadb-admin ping -h localhost -u root -proot; do sleep 1; done'

      - name: Run integration tests
        run: bun run test:integration
        timeout-minutes: 15

      - name: Stop Docker services
        if: always()
        run: docker compose down

  test-docker:
    name: Test Docker Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Validate docker-compose.yml
        run: docker compose config

      - name: Check Docker image builds
        run: |
          docker compose build --no-cache nginx
          docker compose build --no-cache php
        timeout-minutes: 30

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Run security audit
        run: bun audit
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  size-check:
    name: Check Bundle Size
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Build and check size
        run: |
          bun run build
          echo "## Build Output Size" >> $GITHUB_STEP_SUMMARY
          du -sh out/ >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Detailed Breakdown" >> $GITHUB_STEP_SUMMARY
          du -sh out/* >> $GITHUB_STEP_SUMMARY

  pr-comment:
    name: Post PR Summary
    runs-on: ubuntu-latest
    needs: [validate, integration-tests, test-docker, security-check, size-check]
    if: always()

    steps:
      - name: PR Summary Comment
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = ${{ toJSON(needs) }};
            const summary = Object.entries(jobs)
              .map(([name, job]) => `- ${name}: ${job.result}`)
              .join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## PR Checks Summary\n\n${summary}\n\nâœ… All checks must pass before merging.`
            });
