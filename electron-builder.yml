appId: com.electron.app
productName: DevWP
directories:
  buildResources: build
files:
  - 'out/**/*'
  - 'package.json'
  - '!www/**/*'
  - '!config/**/*'
  - '!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}'
  - '!.editorconfig'
  - '!**/._*'
  - '!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}'
  - '!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}'
  - '!**/{appveyor.yml,.travis.yml,circle.yml}'
  - '!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}'
asarUnpack:
  - resources/**
win:
  executableName: DevWP
nsis:
  artifactName: ${name}-${version}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
mac:
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
dmg:
  artifactName: ${name}-${version}.${ext}
linux:
  executableName: DevWP
  target:
    - AppImage
    - deb
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}.${ext}
npmRebuild: false
# publish:
#   provider: generic
#   url: https://example.com/auto-updates
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
